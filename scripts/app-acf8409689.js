!function(){"use strict";angular.module("rsaPasswordShare",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngMessages","ngAria","ngResource","ngRoute","ui.bootstrap","toastr"])}(),function(){"use strict";function e(e){return{restrict:"A",link:function(t,r,a){r.on("click",function(){e.getSelection().toString()||this.setSelectionRange(0,this.value.length)})}}}e.$inject=["$window"],angular.module("rsaPasswordShare").directive("selectOnClick",e)}(),function(){"use strict";function e(){function e(e){var t=this;t.relativeDate=e(t.creationDate).fromNow()}e.$inject=["moment"];var t={restrict:"E",templateUrl:"app/components/navbar/navbar.html",scope:{creationDate:"="},controller:e,controllerAs:"vm",bindToController:!0};return t}angular.module("rsaPasswordShare").directive("acmeNavbar",e)}(),function(){"use strict";function e(){var e=this;e.bla="blabbb"}angular.module("rsaPasswordShare").controller("MainController",e)}(),function(){"use strict";function e(){var e=this;e.encryptIt=function(){var t=new JSEncrypt;t.setPublicKey(e.publickey),e.encrypted=t.encrypt(e.message)}}angular.module("rsaPasswordShare").controller("EncryptController",e)}(),function(){"use strict";function e(){var e=this;e.decrypted={message:"asdf"};var t=new JSEncrypt({default_key_size:1024});t.getKey(),e.privatekey=t.getPrivateKey(),e.publickey=t.getPublicKey(),e.decryptIt=function(){e.decrypted={message:t.decrypt(e.message)}}}angular.module("rsaPasswordShare").controller("DecryptController",e)}(),function(){"use strict";function e(e){e.debug("runBlock end")}e.$inject=["$log"],angular.module("rsaPasswordShare").run(e)}(),function(){"use strict";function e(e){e.when("/",{templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"main"}).when("/encrypt",{templateUrl:"app/encrypt/encrypt.html",controller:"EncryptController",controllerAs:"encrypt"}).when("/decrypt",{templateUrl:"app/decrypt/decrypt.html",controller:"DecryptController",controllerAs:"decrypt"}).otherwise({redirectTo:"/"})}e.$inject=["$routeProvider"],angular.module("rsaPasswordShare").config(e)}(),function(){"use strict";angular.module("rsaPasswordShare").constant("malarkey",malarkey).constant("moment",moment)}(),function(){"use strict";function e(e){e.debugEnabled(!0)}e.$inject=["$logProvider"],angular.module("rsaPasswordShare").config(e)}(),angular.module("rsaPasswordShare").run(["$templateCache",function(e){e.put("app/decrypt/decrypt.html",'<div class="container"><div><acme-navbar creation-date="main.creationDate"></acme-navbar></div><div class="row"><div class="col-lg-12"><h2>Decrypt a Message</h2><p>Here you can decrypt a message (e.g. a password).</p><h2>Step 1</h2><p>Send this to your friend who wants to encrypt the message (its your 2048 bit public key, it is safe to share):<br><br></p><form><label><textarea class="form-control" ng-model="decrypt.publickey" select-on-click="" cols="50" rows="10" readonly="readonly"></textarea></label></form><p>DO NOT RELOAD THE PAGE until your friend has sent you the encrypted message. The public key on this page is a one-time use public key only.</p><h2>Step 2</h2><p>Input the message here that your friend has encrypted with your public key:</p><form><label><textarea class="form-control" ng-model="decrypt.message" cols="50" rows="10"></textarea></label><br><button ng-click="decrypt.decryptIt()" class="btn btn-default btn-primary"><i class="glyphicon glyphicon-bullhorn"></i> Decrypt</button></form><h2>Step 3</h2><p>Below should appear your message...</p><p>{{decrypt.decrypted.message}}</p></div></div></div>'),e.put("app/encrypt/encrypt.html",'<div class="container"><div><acme-navbar creation-date="main.creationDate"></acme-navbar></div><div class="row"><div class="col-lg-12"><h2>Encrypt a Message</h2><p>Here you can encrypt a message (e.g. a password).</p><h2>Step 1</h2><p>Get the public key from your friend:<br><br>As he wants to decrypt the message, tell him to go to <a href="#/decrypt">the decrypt section and copy the public key</a><br><br><br>Paste his public key here:</p><form><label><textarea class="form-control" ng-model="encrypt.publickey" cols="50" rows="10"></textarea></label></form><div ng-show="encrypt.publickey.length > 0"><h2>Step 2</h2><p>Input the message here that you want to send to your friend:</p><form><label><textarea class="form-control" ng-model="encrypt.message" cols="50" rows="10" ng-change="encrypt.encryptIt()"></textarea></label><br><button ng-click="encrypt.encryptIt()" class="btn btn-default btn-primary"><i class="glyphicon glyphicon-lock"></i> Encrypt</button></form><h2>Step 3</h2><p>Below should appear your message - send it to your friend...</p><form><label><textarea class="form-control" select-on-click="" ng-model="encrypt.encrypted" cols="50" rows="10" readonly="readonly"></textarea></label></form></div></div></div></div>'),e.put("app/main/main.html",'<div class="container"><div><acme-navbar creation-date="main.creationDate"></acme-navbar></div><div class="row"><div class="col-lg-12"><h1>RSA Public/Private Key Message sharing</h1><p>To share messages, such as passwords, across the internet is always a bit problematic. As soon as a password is sent over the wire unencrypted it <em>should be considered as compromised.</em> There are various tools out there, for example 1password, which allow password management. But what if you want to share a passwort with a third party?</p><h2>How it works</h2><p>You can either encrypt a message with a public key or decrypt a message with a private key.<br><br>For example You want to send your friend Patrick a password "ABC".<br>You tell Patrick to go to /#/decrypt and send you <em>his public key</em>.<br>You go to /#/encrypt and put in Patrick\'s public key and the message you want to encrypt.<br>You send Patrick the encrypted message.<br>Patrick uses /#/decrypt to decrypt the message (with the private key which is created in the background).</p><h2>Is it safe?</h2><p>Hopefully safe enough for transmitting it via the internet. It uses the <a href="https://github.com/travist/jsencrypt" target="_blank">JSEncrypt</a> library for generating the keypairs and uses it for encryption/decryption.</p></div></div></div>'),e.put("app/components/navbar/navbar.html",'<nav class="navbar navbar-static-top navbar-inverse"><div class="container-fluid"><div class="navbar-header"><a class="navbar-brand" href="#/"><span class="glyphicon glyphicon-home"></span> RSA Password Share</a></div><ul class="nav navbar-nav"><li><a ng-href="#/encrypt">Encrypt (send a message)</a></li><li><a ng-href="#/decrypt">Decrypt (receive a message)</a></li></ul></div></nav>')}]);
//# sourceMappingURL=../maps/scripts/app-acf8409689.js.map
